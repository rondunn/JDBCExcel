
package JDBCExcel;
import java.sql.*;

public class BaseStatement implements java.sql.Statement {

	@Override
	public ResultSet executeQuery(String sql) throws SQLException {
		throw new SQLException("Method executeQuery not implemented.");
	}

	@Override
	public int executeUpdate(String sql) throws SQLException {
		throw new SQLException("Method executeUpdate not implemented.");
	}

	@Override
	public void close() throws SQLException {
		throw new SQLException("Method close not implemented.");
	}

	@Override
	public int getMaxFieldSize() throws SQLException {
		throw new SQLException("Method getMaxFieldSize not implemented.");
	}

	@Override
	public void setMaxFieldSize(int max) throws SQLException {
		throw new SQLException("Method setMaxFieldSize not implemented.");
	}

	@Override
	public int getMaxRows() throws SQLException {
		throw new SQLException("Method getMaxRows not implemented.");
	}

	@Override
	public void setMaxRows(int max) throws SQLException {
		throw new SQLException("Method setMaxRows not implemented.");
	}

	@Override
	public void setEscapeProcessing(boolean enable) throws SQLException {
		throw new SQLException("Method setEscapeProcessing not implemented.");
	}

	@Override
	public int getQueryTimeout() throws SQLException {
		throw new SQLException("Method getQueryTimeout not implemented.");
	}

	@Override
	public void setQueryTimeout(int seconds) throws SQLException {
		throw new SQLException("Method setQueryTimeout not implemented.");
	}

	@Override
	public void cancel() throws SQLException {
		throw new SQLException("Method cancel not implemented.");
	}

	@Override
	public SQLWarning getWarnings() throws SQLException {
		throw new SQLException("Method getWarnings not implemented.");
	}

	@Override
	public void clearWarnings() throws SQLException {
		throw new SQLException("Method clearWarnings not implemented.");
	}

	@Override
	public void setCursorName(String name) throws SQLException {
		throw new SQLException("Method setCursorName not implemented.");
	}

	@Override
	public boolean execute(String sql) throws SQLException {
		throw new SQLException("Method execute not implemented.");
	}

	@Override
	public ResultSet getResultSet() throws SQLException {
		throw new SQLException("Method getResultSet not implemented.");
	}

	@Override
	public int getUpdateCount() throws SQLException {
		throw new SQLException("Method getUpdateCount not implemented.");
	}

	@Override
	public boolean getMoreResults() throws SQLException {
		throw new SQLException("Method getMoreResults not implemented.");
	}

	@Override
	public void setFetchDirection(int direction) throws SQLException {
		throw new SQLException("Method setFetchDirection not implemented.");
	}

	@Override
	public int getFetchDirection() throws SQLException {
		throw new SQLException("Method getFetchDirection not implemented.");
	}

	@Override
	public void setFetchSize(int rows) throws SQLException {
		throw new SQLException("Method setFetchSize not implemented.");
	}

	@Override
	public int getFetchSize() throws SQLException {
		throw new SQLException("Method getFetchSize not implemented.");
	}

	@Override
	public int getResultSetConcurrency() throws SQLException {
		throw new SQLException("Method getResultSetConcurrency not implemented.");
	}

	@Override
	public int getResultSetType() throws SQLException {
		throw new SQLException("Method getResultSetType not implemented.");
	}

	@Override
	public void addBatch(String sql) throws SQLException {
		throw new SQLException("Method addBatch not implemented.");
	}

	@Override
	public void clearBatch() throws SQLException {
		throw new SQLException("Method clearBatch not implemented.");
	}

	@Override
	public int[] executeBatch() throws SQLException {
		throw new SQLException("Method executeBatch not implemented.");
	}

	@Override
	public Connection getConnection() throws SQLException {
		throw new SQLException("Method getConnection not implemented.");
	}

	@Override
	public boolean getMoreResults(int current) throws SQLException {
		throw new SQLException("Method getMoreResults not implemented.");
	}

	@Override
	public ResultSet getGeneratedKeys() throws SQLException {
		throw new SQLException("Method getGeneratedKeys not implemented.");
	}

	@Override
	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
		throw new SQLException("Method executeUpdate not implemented.");
	}

	@Override
	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
		throw new SQLException("Method executeUpdate not implemented.");
	}

	@Override
	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
		throw new SQLException("Method executeUpdate not implemented.");
	}

	@Override
	public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
		throw new SQLException("Method execute not implemented.");
	}

	@Override
	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		throw new SQLException("Method execute not implemented.");
	}

	@Override
	public boolean execute(String sql, String[] columnNames) throws SQLException {
		throw new SQLException("Method execute not implemented.");
	}

	@Override
	public int getResultSetHoldability() throws SQLException {
		throw new SQLException("Method getResultSetHoldability not implemented.");
	}

	@Override
	public boolean isClosed() throws SQLException {
		throw new SQLException("Method isClosed not implemented.");
	}

	@Override
	public void setPoolable(boolean poolable) throws SQLException {
		throw new SQLException("Method setPoolable not implemented.");
	}

	@Override
	public boolean isPoolable() throws SQLException {
		throw new SQLException("Method isPoolable not implemented.");
	}

	@Override
	public void closeOnCompletion() throws SQLException {
		throw new SQLException("Method closeOnCompletion not implemented.");
	}

	@Override
	public boolean isCloseOnCompletion() throws SQLException {
		throw new SQLException("Method isCloseOnCompletion not implemented.");
	}

	@Override
	public <T> T unwrap(Class<T> iface) throws SQLException {
		throw new SQLException("Method unwrap not implemented.");
	}

	@Override
	public boolean isWrapperFor(Class<?> iface) throws SQLException {
		throw new SQLException("Method isWrapperFor not implemented.");
	}
	
}
